README.smooth_inst.04oct01

Updated:  C. DeTar 10/04/01

This directory contains source code and example input and output files
for six programs for smoothing SU(3) gauge configurations and analyzing
their instanton content:

su3_hyp   - smooths gauge configurations with HYP smearing sweeps
	    (See Anna Hasenfratz hep-lat/0104015)

su3_ape   - smooths gauge configurations with APE smearing sweeps
            and SU(3) projection and calculates topological charge density.

su3_fat   - same as su3_ape but without SU(3) projection

inst_size -  determines the locations and sizes of instantons in
             a topological charge density file.

topo_info -  reports bookkeeping information about a topological
             charge density file.

instant   - creates an SU(3) instanton configuration

su3_hyp, su3_ape, and su3_fat are MIMD version 6 programs and should
run on any supported architecture. instant, inst_size and topo_info
are standalone programs that run serially.

To build su3_XXX, copy the appropriate machine dependent makefile
(e.g., Make_vanilla) from the v6/ directory to this subdirectory, and use

make -f Make_vanilla su3_smooth

To build instant, inst_size and topo_info, use the Make_utilities makefile

make -f Make_utilities inst_size
make -f Make_utilities topo_info

To run su3_XXX, prepare an input file (which is very similar to
other MIMD input files) and use, for example,

su3_hyp < in.sample.su3_hyp > out.test.su3_hyp &

The input file can contain multiple stanzas for measuring and saving
topological density files and for saving gauge configuration files at
various stages of smoothing.

To run topo_info, include the filename of the input density file on
the command line, for example

topo_info topo.sample

To run inst_size, include the input filename and also the "shift" value
on the command line, for example

inst_size topo.sample 0

The code instant takes no command-line arguments, but prompts for the
lattice file name and dimensions and instanton size.

The program su3_ape is based on Tom DeGrand's rg_map program.
It uses a factor ape_weight that specifies the weight of the links
and the staples.  The link weight is (1.0 - ape_weight), and the
staple weight is (ape_weight / 6.0).  This factor was named ape_rg
in the rg_map program.  A suitable choice of ape_weight (approximately
0.45) leads to RG mapping.  In the program, projection onto SU(3) is done
with SU(2) subgroup hits, as found in the source file project_su3_hit.c.
An alternative source file project_su3_direct.c could be used if desired.
Like other MIMD version 6 programs, su3_smooth can read and write
configuration files from older MIMD versions, and handles byte ordering
automatically.

The program inst_size is a revision of Anna Hasenfratz's inst_min_q20
program, that now reads a binary topological density file generated
with su3_XXX and calculates and reports instanton locations and sizes.
The output format is the same as that of the inst_min_q20 program.
The program now handles byte ordering and lattice size automatically.
To work properly, a 32-bit type must be defined; for most machines this
type should be int, but for some machines, the type must be short int.
THE config.h file MUST BE HAND-EDITED TO SPECIFY THIS TYPE.

The program topo_info reads a density file generated by su3_XXX
and echoes the header information.

The format of the topological density file is

int32    magic_number (66051)
int32    nx ny nz nt
char[80] startfile
int32    total_sweeps
float    ape_weight
float    for(t)for(z)for(y)for(x){ Q(x,y,z,t) }

where Q(x,y,z,t) is the topological density in single precision.
(Within su3_XXX, the density is kept in double precision,
but for further processing, single precision should be adequate).
