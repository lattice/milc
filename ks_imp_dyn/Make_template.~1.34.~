#  Kogut-Susskind fermions with improved actions
#  MIMD version 7
#
#  Generic make-include file for ks_imp_dyn
#  Use -DONEMASS to build for a single degenerate quark mass
#  Otherwise the build assumes two quark masses.
#
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_rmd" used the refreshed molecular dynamics algorithm
#		for the Symanzik 1 loop gauge action and Asqtad quark action
#	"make su3_rmd1" Same, but for one degenerate quark mass
#
#       See examples below for naming and building targets for
#               other actions

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  gauge_action.h \
  ks_imp_includes.h \
  quark_action.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

MY_OBJECTS= \
  control.o \
  gauge_info.o \
  setup.o \
  update_h.o \
  update_u.o

# Objects depending on architecture and software package 
LAYOUT = layout_hyper_prime.o # Choices possible here

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ploop3.o show_generic_ks_md_opts.o

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = \
 ${MY_OBJECTS} \
 ${GAUGE_OBJECTS} \
 ${LAYOUT} \
 ${STANDARD_OBJECTS} \
 ${ADD_OBJECTS} \
 ${EXTRA_OBJECTS}

#Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES} ${QUDA_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS}  $*.c 

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}:
	-/bin/rm -f .lastmake.* quark_action.h gauge_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

ALL_MAKES = \
   Make_template \
   ${MAKEFILE} \
   ../Make_template_combos \
   ../Make_template_scidac \
   ../generic/Make_template \
   ../generic_ks/Make_template \
   ../generic_wilson/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

# Directories where we store the improved action headers
QUARKIMP = ../generic_ks/imp_actions
GAUGEIMP = ../generic/imp_actions

quark_action.h: ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

gauge_action.h: ${GAUGEIMP}/${GAUGE}
	/bin/cp ${GAUGEIMP}/${GAUGE} gauge_action.h


########################################################
# Optional DEFINES for targets

# -DFN          identifies fat-Naik-like actions with only next and 3rd
#               next neighbor linkage

# -DONEMASS     only one fermion species (formerly ks_imp_dyn1)
# 

# -DDM_DU0      (for EOS) calculate quantities involving the deriv of
#               action wrto u0

# -DCHEM_POT    compute quantities needed for quark number susceptibility

# -DD_CHEM_POT  compute quantities needed for nonzero chemical potential


##### Targets: 

su3_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} update.o"

su3_rmd1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DONEMASS -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} update_onemass.o"

su3_rmd_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DDM_DU0 -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} update.o"

su3_rmd_eos1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DDM_DU0 -DONEMASS -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	update_onemass.o"

su3_rmd_susc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DCHEM_POT -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} update.o"

su3_rmd_mu_eos::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DDM_DU0 -DD_CHEM_POT -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS=  ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	update.o mu_fast.o"

su3_rmd_dblstore_gath13_fewsums::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DDBLSTORE_FN -DD_FN_GATHER13 -DFEWSUMS \
	-UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	update.o"

su3_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -UKS_MULTICG \
	-DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	d_action.o update.o"

su3_hmc1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DONEMASS -UKS_MULTICG\
	-DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = asqtad_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	d_action.o update_onemass.o"

su3_rmd_naive::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DONEMASS -DFN -UKS_MULTICG -UKS_MULTIFF" \
	"GAUGE = plaquette_action.h" \
	"QUARK = onelink_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${GAUGE_FORCE} \
	${ASQ_FORCE} update_onemass.o"

# No QOP support for p4, so we use pure MILC routines only and
# undefine the macros HAVE_QOP and HAVE_QDP

su3_hmc_eo_symzk1_p4::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DEO -DPHI_ALGORITHM -DHMC_ALGORITHM \
	-UKS_MULTICG -UKS_MULTIFF -UHAVE_QOP -UHAVE_QDP" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = p4_action.h" \
	"EXTRA_OBJECTS= ${EO_OBJECTS} ${EO_FORCE} ${GAUGE_FORCE_MILC} d_congrad5_two_src.o \
	 d_action.o update.o"

# The following stanzas illustrate how to create targets for alternative
# choices of quark and gauge actions

su3_rmd_eo_symzk1_fat7tad::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DEO -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = fat7tad_action.h" \
	"EXTRA_OBJECTS= ${EO_OBJECTS} ${GAUGE_FORCE} \
	update.o"

su3_rmd_plaq_fat7naik::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -UKS_MULTICG -UKS_MULTIFF" \
	"GAUGE = plaquette_action.h" \
	"QUARK = fat7naik_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	update.o"

su3_rmd_plaq_fat7naik1::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN  -DONEMASS -UKS_MULTICG -UKS_MULTIFF" \
	"GAUGE = plaquette_action.h" \
	"QUARK = fat7naik_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} \
	update_onemass.o"

su3_rmd_symzk1_naik::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -UKS_MULTICG" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = naik_action.h" \
	"EXTRA_OBJECTS= ${FN_OBJECTS} ${ASQ_FORCE} ${GAUGE_FORCE} update.o"

su3_rmd_eo_symzk1_p4::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DEO -UKS_MULTICG -UKS_MULTIFF -UHAVE_QOP -UHAVE_QDP" \
	"GAUGE = symanzik_1loop_action.h" \
	"QUARK = p4_action.h" \
	"EXTRA_OBJECTS= ${EO_OBJECTS} ${EO_FORCE} ${GAUGE_FORCE} update.o"

clean:
	-/bin/rm -f *.o

# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 

