#  Schroedinger functional simulation for pure gauge SU3
#  MIMD version 6
#
#  Generic make-include file for pure_gauge codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_schr_rmd" used the refreshed molecular dynamics algorithm
#	"make su3_schr_hmc" uses hybrid Monte Carlo algorithm.
#	"make su3_schr_ora" uses overrelaxed/quasi heat bath algorithm. 
#

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  schroed_pg_includes.h

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS}

# Choose one of the lattice layout algorithms:
LAYOUT = layout_hyper

# All required object files
# Basic set from current directory
MY_OBJECTS =         \
  control.o          \
  setup.o            \
  gauge_info.o
# Basic set from generic directory
G_OBJECTS =          \
  ${LAYOUT}.o        \
  check_unitarity.o  \
  io_helpers.o       \
  ${IO_LAT_REAL}     \
  make_lattice.o     \
  nersc_cksum.o \
  plaquette4.o       \
  d_plaq2.o          \
  ranstuff.o         \
  reunitarize2.o
# Basic set from generic_pg directory
G_PG_OBJECTS =
# Basic set from generic_schroed directory
G_SCHROED_OBJECTS =  \
  coupling.o         \
  make_schroed_lattice.o

# To these we add project-specific extra objects and machine-dependent objects
OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_PG_OBJECTS} ${G_SCHROED_OBJECTS} \
  ${EXTRA_OBJECTS} ${MACHINE_DEP}

#Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

# Default rule for C compilation
.c.o:
	${CC} -c ${CFLAGS} $<

# All make files used in this compilation
ALL_MAKES = Make_template ../generic/Make_template \
  ../generic_pg/Make_template ../generic_schroed/Make_template \
  ${MAKEFILE} ../include

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.*
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All objects should depend on these
ALL_DEPEND = ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

${OBJECTS}: ${ALL_DEPEND}

##### Targets:

su3_schr_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES=  -DRMD_ALGORITHM" \
	"EXTRA_OBJECTS= update.o update_u.o update_h.o ranmom.o"

su3_schr_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= update.o update_u.o update_h.o ranmom.o d_action.o"

su3_schr_ora::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DORA_ALGORITHM" \
	"EXTRA_OBJECTS=  update_ora.o dsdu_qhb.o relax.o monte.o"

clean:
	-/bin/rm -f *.o


# Rules for generic routines
include ../generic/Make_template

# Rules for generic_pg routines
include ../generic_pg/Make_template

# Rules for generic_schroed routines
include ../generic_schroed/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" all

localmake: ${OBJECTS} ${QCDLIB}
	${LD} ${LDFLAGS} -o ${MYTARGET} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
