#  Schroedinger functional simulation for pure gauge SU3
#  MIMD version 7
#
#  Generic make-include file for pure_gauge codes
#  This template file defines rules and macros common to all architectures
#  It is intended to be an include file for other Makefiles.
#  Don't use it by itself!
#
#	"make su3_schr_rmd" uses the refreshed molecular dynamics algorithm
#	"make su3_schr_phi" uses phi algorithm.
#	"make su3_schr_hmc" uses hybrid Monte Carlo algorithm.
#	"make su3_schr_sw_phi" uses phi algorithm with Sexton-Weingarten
#			    updating.
#	"make su3_schr_sw_hmc" uses hybrid Monte Carlo algorithm with S-W.
#	"make su3_schr_rw_rmd" uses RMD with coupling reweighting
#	"make su3_schr_rw_phi" uses PHI with coupling reweighting
#	"make su3_schr_rw_hmc" uses HMC with coupling reweighting
#	"make su3_schr_rmd_ph" uses RMD with fermion phases
#	"make su3_schr_phi_ph" uses PHI with fermion phases
#	"make su3_schr_hmc_ph" uses HMC with fermion phases
#

MYINCLUDEDIR = .
INCLUDEDIR = ../include
#Where the complex and su3 libraries are
LIBDIR = ../libraries

# To force a remake when changing headers

GLOBAL_HEADERS = ${INCLUDEDIR} ../libraries/include

INLINE_HEADERS = \
  ../sse/include/ \
  ../sse2/include/ \
  ../libraries/include/

MY_HEADERS = \
  lattice.h \
  params.h \
  defines.h \
  schroed_ks_includes.h \
  quark_action.h \
  ${ADDHEADERS}

HEADERS = ${GLOBAL_HEADERS} ${MY_HEADERS} ${INLINE_HEADERS} ${SCIDAC_HEADERS}

# All required object files
# Basic set from current directory
MY_OBJECTS =         \
  control.o          \
  f_measure.o        \
  gauge_info.o       \
  plaquette4.o       \
  setup.o            \
  update_u.o         \
  update_h.o         \


# Basic set from generic directory
G_OBJECTS =          \
  ${GAUGE_OBJECTS}   \
  ${STANDARD_OBJECTS} \
  ranmom.o           \

# Basic set from generic_ks directory
G_KS_OBJECTS = \
  ${FN_OBJECTS} \


#  grsource.o
#  dslash.o

# Basic set from generic_wilson directory
G_WILSON_OBJECTS = 

# ifeq ($(strip ${HAVEQIO}),true)
#   G_WILSON_OBJECTS += io_scidac_w.o
# endif

# Basic set from generic_schroed directory
G_SCHROED_OBJECTS =  \
  coupling.o         \
  make_schroed_lattice.o

# Objects depending on architecture and software package 

# Selection of layout
ifeq ($(strip ${QCDOC}),true)
  LAYOUT = layout_qcdoc.o # Required
else
  ifeq ($(strip ${HAVEQDP}),true)
    LAYOUT = layout_qdp.o # Required
  else
    LAYOUT = layout_hyper_prime.o # Choices possible here
  endif
endif

# EDRAM allocation for QCDOC
ifeq ($(strip ${QCDOC}),true)
  QCDOC_OBJECTS = qcdoc_alloc.o
endif

ADD_OBJECTS = ${MACHINE_DEP_IO} ${COMMPKG} ${QCDOC_OBJECTS} ${QDP_OBJECTS} \
   ${SCIDAC_OBJECTS}

# Generic QOP objects
ifeq ($(strip ${HAVEQOP}),true)
  ADD_OBJECTS += ${GENERICQOP}
endif

OBJECTS = ${MY_OBJECTS} ${G_OBJECTS} ${G_WILSON_OBJECTS} \
  ${G_KS_OBJECTS} ${G_SCHROED_OBJECTS} ${LAYOUT} \
  ${ADD_OBJECTS} ${EXTRA_OBJECTS}

#Libraries for complex numbers and su3 functions
P = $(strip ${PRECISION})
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a 

#Libraries for complex numbers and su3 functions
QCDLIB = ${LIBDIR}/su3.${P}.a ${LIBDIR}/complex.${P}.a

LIBRARIES = ${QCDLIB} ${SCIDAC_LIBRARIES} ${QUDA_LIBRARIES}

# Default rule for C compilation
.c.o: ; ${CC} -c ${CFLAGS} $<

# To force a full remake when changing targets
LASTMAKE = .lastmake.${MAKEFILE}.${P}.${MYTARGET}

${LASTMAKE}: ${ALL_MAKES}
	-/bin/rm -f .lastmake.* quark_action.h
	${MAKE} -f ${MAKEFILE} clean
	touch ${LASTMAKE}

# All make files used in this compilation
ALL_MAKES = \
  Make_template \
  ${MAKEFILE} \
  ../Make_template_qop \
  ../Make_template_scidac \
  ../generic/Make_template \
  ../generic_ks/Make_template \
  ../generic_schroed/Make_template \
  ../generic_wilson/Make_template

# To force a remake when changing any make file, header, or target
${OBJECTS} : ${LASTMAKE} ${HEADERS} ${ALL_MAKES}

# Directories where we store the improved action headers
# This application works only with unimproved (naive) staggered fermions
QUARKIMP = ../generic_ks/imp_actions
QUARK = onelink_action.h

quark_action.h: ${QUARKIMP}/${QUARK}
	/bin/cp ${QUARKIMP}/${QUARK} quark_action.h

########################################################
##### Targets:

su3_schr_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN" \
	"EXTRA_OBJECTS= update.o"

su3_schr_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DPHI_ALGORITHM" \
	"EXTRA_OBJECTS= update.o"

su3_schr_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= d_action.o update.o"

# The next target is included for completeness, but is untested
su3_schr_sw_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DPHI_ALGORITHM -DSEXT_WEIN" \
	"EXTRA_OBJECTS= update_hgh.o"

su3_schr_sw_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DPHI_ALGORITHM -DHMC_ALGORITHM -DSEXT_WEIN" \
	"EXTRA_OBJECTS= d_action.o update_hgh.o"

su3_schr_rmd_ph::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DFERM_PHASES" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_phi_ph::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DFERM_PHASES -DPHI_ALGORITHM" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_hmc_ph::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DFERM_PHASES -DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= d_action.o update.o"

su3_schr_rw_rmd::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DREWEIGH" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_rw_phi::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DREWEIGH -DPHI_ALGORITHM" \
	"EXTRA_OBJECTS= update.o"

# The next target is included for completeness, but is untested
su3_schr_rw_hmc::
	${MAKE} -f ${MAKEFILE} target "MYTARGET= $@" \
	"DEFINES= -DFN -DREWEIGH -DPHI_ALGORITHM -DHMC_ALGORITHM" \
	"EXTRA_OBJECTS= d_action.o update.o"

clean:
	-/bin/rm -f *.o quark_action.h 


# Rules for generic routines
include ../generic/Make_template

# Rules for generic_ks routines
include ../generic_ks/Make_template

# Rules for generic_schroed routinesb
include ../generic_schroed/Make_template

# Rules for generic_wilson routines
include ../generic_wilson/Make_template

libmake:
	@echo Building libraries with ${MAKELIBRARIES}
	cd ${LIBDIR} ;\
	${MAKE} -f ${MAKELIBRARIES} "APP_CC=${CC}" "PRECISION=${PRECISION}" all

localmake: ${OBJECTS} ${LIBRARIES}
	${LD} -o ${MYTARGET} ${LDFLAGS} \
	${OBJECTS} ${QCDLIB} ${ILIB} -lm
	touch localmake

target: libmake localmake 
